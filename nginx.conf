user root;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    server {
        listen 80;

        server_name 87.228.83.10;

        location / {
            root /usr/share/nginx/html/frontend;
            try_files $uri $uri/ /index.html;
        }

         location /static/ {
            alias /usr/share/nginx/html/frontend/static/;
            expires 30d;
            add_header Cache-Control "public";
        }

        location /backend-static/ {
            alias /usr/share/nginx/html/static/;
            expires 30d;
            add_header Cache-Control "public";
        }

        location /api/users/ {
            proxy_pass http://user-service:8000/api/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/trainings/ {
            proxy_pass http://training-service:8000/api/trainings/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/auth/ {
            proxy_pass http://user-service:8000/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/exercises/ {
            proxy_pass http://training-service:8000/api/exercises/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
