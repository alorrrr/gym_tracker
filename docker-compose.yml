services:
  db:
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
  user-service:
    image: user-service
    build:
      context: ./user_service/
      dockerfile: Dockerfile
    init: true
    volumes:
      - ./user_service/:/usr/src/app/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env
  notification-service:
    image: notification-service
    restart: always
    build:
      context: ./notification_service/
      dockerfile: Dockerfile
    init: true
    volumes:
      - ./notification_service/:/usr/src/app
    command: python manage.py start_email_worker
    ports:
      - "8001:8000"
    depends_on:
      rabbitmq: 
        condition: service_started
    env_file:
      - .env
  training-service:
    image: training-service
    build:
      context: ./training_service/
      dockerfile: Dockerfile
    init: true
    volumes:
      - ./training_service/:/usr/src/app/
    ports:
      - "8002:8000"
    depends_on:
      - db
    env_file:
      - .env
  celery:
    image: notification-service
    build:
      context: ./notification_service/
      dockerfile: Dockerfile
    command: celery -A notification_service worker -l INFO
    env_file:
      - .env
    depends_on:
      rabbitmq: 
        condition: service_started
      notification-service: 
        condition: service_started
  rabbitmq:
    image: rabbitmq:4.0.7-management-alpine
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_VHOST="/"
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=Jojojo123
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
volumes:
  postgres_data:
  rabbitmq_data: